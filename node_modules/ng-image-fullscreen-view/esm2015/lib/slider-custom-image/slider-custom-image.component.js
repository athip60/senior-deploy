import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
import { NgImageFullscreenViewService } from '../ng-image-fullscreen-view.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../ng-image-fullscreen-view.service';
import * as ɵngcc2 from '@angular/platform-browser';
import * as ɵngcc3 from '@angular/common';

function SliderCustomImageComponent_div_0_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 7);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("src", ctx_r1.fileUrl, ɵngcc0.ɵɵsanitizeUrl)("alt", ctx_r1.alt)("title", ctx_r1.title);
} }
function SliderCustomImageComponent_div_0_iframe_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "iframe", 8);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("src", ctx_r2.fileUrl, ɵngcc0.ɵɵsanitizeResourceUrl);
} }
function SliderCustomImageComponent_div_0_video_3_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "video", 9);
    ɵngcc0.ɵɵlistener("click", function SliderCustomImageComponent_div_0_video_3_Template_video_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.videoClickHandler($event); });
    ɵngcc0.ɵɵelement(1, "source", 10);
    ɵngcc0.ɵɵtext(2, " Your browser does not support the video tag. ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("autoplay", ctx_r3.videoAutoPlay);
    ɵngcc0.ɵɵattribute("controls", ctx_r3.showVideoControls ? ctx_r3.showVideoControls : null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("src", ctx_r3.fileUrl, ɵngcc0.ɵɵsanitizeUrl);
} }
function SliderCustomImageComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1, "Invalid file format");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("dir", ctx_r4.direction);
} }
function SliderCustomImageComponent_div_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 12);
} }
function SliderCustomImageComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, SliderCustomImageComponent_div_0_img_1_Template, 1, 3, "img", 2);
    ɵngcc0.ɵɵtemplate(2, SliderCustomImageComponent_div_0_iframe_2_Template, 1, 1, "iframe", 3);
    ɵngcc0.ɵɵtemplate(3, SliderCustomImageComponent_div_0_video_3_Template, 3, 3, "video", 4);
    ɵngcc0.ɵɵtemplate(4, SliderCustomImageComponent_div_0_div_4_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵtemplate(5, SliderCustomImageComponent_div_0_span_5_Template, 1, 0, "span", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.IMAGE && ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.YOUTUBE && ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.VIDEO);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.fileUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.type === ctx_r0.YOUTUBE || ctx_r0.type === ctx_r0.VIDEO || ctx_r0.isVideo);
} }
const youtubeRegExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=|\?v=)([^#\&\?]*).*/, validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'], validVideoExtensions = ['mp4'];
let SliderCustomImageComponent = class SliderCustomImageComponent {
    constructor(imageFullscreenViewService, sanitizer) {
        this.imageFullscreenViewService = imageFullscreenViewService;
        this.sanitizer = sanitizer;
        this.YOUTUBE = 'youtube';
        this.IMAGE = 'image';
        this.VIDEO = 'video';
        this.fileUrl = '';
        this.fileExtension = '';
        this.type = this.IMAGE;
        // @inputs
        this.videoAutoPlay = false;
        this.showVideoControls = 1;
        this.isVideo = false;
        this.alt = '';
        this.title = '';
        this.direction = 'ltr';
    }
    set imageUrl(url) {
        if (url && typeof (url) === 'string') {
            this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);
            this.fileExtension = url.replace(/^.*\./, '');
            if (this.imageFullscreenViewService.base64FileExtension(url)
                && (validFileExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1
                    || validVideoExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1)) {
                this.fileExtension = this.imageFullscreenViewService.base64FileExtension(url);
            }
            // verify for youtube url
            const match = url.match(youtubeRegExp);
            if (match && match[2].length === 11) {
                this.type = this.YOUTUBE;
                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${'//www.youtube.com/embed/'}${match[2]}${this.videoAutoPlay ? '?autoplay=1&enablejsapi=1' : '?autoplay=0&enablejsapi=1'}${'&controls='}${this.showVideoControls}`);
            }
            else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {
                this.type = this.IMAGE;
            }
            else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {
                this.type = this.VIDEO;
            }
        }
    }
    videoClickHandler(event) {
        if (event && event.srcElement && !this.showVideoControls) {
            if (event.srcElement.paused) {
                event.srcElement.play();
            }
            else {
                event.srcElement.pause();
            }
        }
    }
};
SliderCustomImageComponent.ɵfac = function SliderCustomImageComponent_Factory(t) { return new (t || SliderCustomImageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgImageFullscreenViewService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer)); };
SliderCustomImageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SliderCustomImageComponent, selectors: [["custom-img"]], inputs: { videoAutoPlay: "videoAutoPlay", showVideoControls: "showVideoControls", isVideo: "isVideo", alt: "alt", title: "title", direction: "direction", imageUrl: "imageUrl" }, decls: 1, vars: 1, consts: [["class", "custom-image-main", 4, "ngIf"], [1, "custom-image-main"], ["class", "image", 3, "src", "alt", "title", 4, "ngIf"], ["class", "youtube", "frameborder", "0", "allowfullscreen", "", 3, "src", 4, "ngIf"], ["class", "video", "type", "video/mp4", "controlsList", "nodownload", 3, "autoplay", "click", 4, "ngIf"], ["class", "invalid-msg", 3, "dir", 4, "ngIf"], ["class", "youtube-icon", 4, "ngIf"], [1, "image", 3, "src", "alt", "title"], ["frameborder", "0", "allowfullscreen", "", 1, "youtube", 3, "src"], ["type", "video/mp4", "controlsList", "nodownload", 1, "video", 3, "autoplay", "click"], ["type", "video/mp4", 3, "src"], [1, "invalid-msg", 3, "dir"], [1, "youtube-icon"]], template: function SliderCustomImageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SliderCustomImageComponent_div_0_Template, 6, 5, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.fileUrl);
    } }, directives: [ɵngcc3.NgIf], encapsulation: 2 });
SliderCustomImageComponent.ctorParameters = () => [
    { type: NgImageFullscreenViewService },
    { type: DomSanitizer }
];
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SliderCustomImageComponent.prototype, "videoAutoPlay", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], SliderCustomImageComponent.prototype, "showVideoControls", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], SliderCustomImageComponent.prototype, "imageUrl", null);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SliderCustomImageComponent.prototype, "isVideo", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SliderCustomImageComponent.prototype, "alt", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SliderCustomImageComponent.prototype, "title", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SliderCustomImageComponent.prototype, "direction", void 0);
SliderCustomImageComponent = __decorate([ __metadata("design:paramtypes", [NgImageFullscreenViewService, DomSanitizer])
], SliderCustomImageComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SliderCustomImageComponent, [{
        type: Component,
        args: [{
                selector: 'custom-img',
                template: "<div *ngIf=\"fileUrl\" class=\"custom-image-main\">\n    <img class=\"image\"\n        *ngIf=\"type === IMAGE && fileUrl\"\n        [src]=\"fileUrl\"\n        [alt]=\"alt\"\n        [title]=\"title\">\n    <iframe class=\"youtube\"\n        *ngIf=\"type === YOUTUBE && fileUrl\"\n        [src]=\"fileUrl\"\n        frameborder=\"0\"\n        allowfullscreen></iframe>\n    <video class=\"video\"\n        (click)=\"videoClickHandler($event)\"\n        [autoplay]=\"videoAutoPlay\"\n        *ngIf=\"type === VIDEO\"\n        type=\"video/mp4\"\n        [attr.controls]=\"showVideoControls ? showVideoControls : null\"\n        controlsList=\"nodownload\">\n        <source [src]=\"fileUrl\" type=\"video/mp4\">\n        Your browser does not support the video tag.\n    </video>\n    <div [dir]=\"direction\" *ngIf=\"!fileUrl\" class=\"invalid-msg\">Invalid file format</div>\n    <span *ngIf=\"type === YOUTUBE || type === VIDEO || isVideo\" class=\"youtube-icon\"></span>\n</div>"
            }]
    }], function () { return [{ type: ɵngcc1.NgImageFullscreenViewService }, { type: ɵngcc2.DomSanitizer }]; }, { videoAutoPlay: [{
            type: Input
        }], showVideoControls: [{
            type: Input
        }], isVideo: [{
            type: Input
        }], alt: [{
            type: Input
        }], title: [{
            type: Input
        }], direction: [{
            type: Input
        }], imageUrl: [{
            type: Input
        }] }); })();
export { SliderCustomImageComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,